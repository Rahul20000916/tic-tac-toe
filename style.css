*, *::after, *::before{
    box-sizing: border-box;
}
:root{
    --cell-size:100px;
    --mark-size: calc(var(--cell-size)* .9);
}
body{
    margin: 0;
}
.board{
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3,auto);
}
.cell{
    width: 100px;
    height: 100px;
    border: 2px solid rgb(0, 0, 0);
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3){
    border-top: none;
}
.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7){
    border-bottom: none;
}
.cell:nth-child(3n+1){
    border-left: none;
}
.cell:nth-child(3n+3){
    border-right: none;
}

.cell.x,
.cell.circle{
    cursor: not-allowed;
}
.cell.x::before,
.cell.x::after,
.cell.circle::before{
    background-color: black;
}
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before{
    background-color: lightgray;
}
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    width: calc(var(--mark-size)*.15);
    height: var(--mark-size);
}
.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before{
    transform: rotate(45deg);
}
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after{
    transform: rotate(-45deg);
}

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    border-radius: 50%;
}
.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before{
    width: var(--mark-size);
    height: var(--mark-size);
}
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after{
    width: calc(var(--mark-size)*.7);
    height: calc(var(--mark-size)*.7);
    background-color: white; 
}

.winning-message{
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.932);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}
.winning-message button{
    font-size: 3rem;
    background-color: white;
    border: .25em .5em;
    cursor: pointer;
}
.winning-message button:hover{
    background-color: black;
    color: white;
    border-color: white;
}
.winning-message.show{
    display: flex;
}


/* Add styles for the body */
body {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh; /* This will center the content vertically */
  }
  
  /* Define the tic-tac-toe border animation */
  @keyframes blink {
    0%, 100% {
      content: "TIC ";
      color: rgba(0, 0, 0, 0.377);
    }
    30% {
      content: "TAC ";
      color: rgba(0, 0, 0, 0.596);
    }
    60% {
      content: "TOE ";
      color: rgba(0, 0, 0, 0.575);
    }
    90% {
      content: "TIC-TAC-TOE ";
      color: black;
    }
  }
  
  /* Create a new class for the blinking border */
  .tic-tac-toe-border::before {
    content: "TIC-TAC-TOE ";
    position: absolute;
    top: 17%; /* Center the element vertically */
    left: 50%; /* Center the element horizontally */
    transform: translate(-50%, -50%); /* Center the element perfectly */
    font-size: 40px; /* Increase the font size as needed */
    font-weight: bold; /* Make the font bold */
    border: 10px solid transparent;
    pointer-events: none;
    animation: blink 2s infinite;
  }
  
  